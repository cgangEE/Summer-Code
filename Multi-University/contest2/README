A. Balls Rearrangement
给定N（1<=N<=1000000000)个球，编号为0到N-1。和A个盒子，编号为0..A，要求把编号为i个球放入到i%A的盒子中, (1<=A, B<=100000)。然后在给另外B个盒子，编号为0..B-1，同理把放在盒子A中的球放到盒子B中，而移动球的代价为abs(A[i]-B[i])，A[i]为球i在A盒子中的盒子的编号，B[i]为球i在B盒子中盒子的编号，求移动球的总的代价。
最小公倍数+分段处理 因为i%a和i%b都是0..a-1和0..b-1的循环节，所有对于每个lcm(a,b)其移动的代价都是一样。假设a<b，而对于每一段又可以分为lcm/a（lcm/a<=b）段来处理，因为a<b所有只可能一段长为a的小段被b分成一半，每半的移动代价都是相同的，于是可以在O(max(a,b))的时间负责度下求得总的移动代价。

B. Warm up
给定一个N个顶点，M条边的无向图，建一条边后，使图的桥最少，输出该图桥的个数。
桥+边双连通分量+最长路 求得图中所有桥后，将边双连通分量缩为一个点，得到一颗树，该树的每一条边都为桥，求得这颗树的最长路，将它的两个端点连接便是删去最多的桥，于是使剩下的桥的数量最少。

C. Points

D. Vases and Flowers
给定N（1<=N<=50000）个花瓶，有两种操作，一种是从x出开始的空花瓶，每个空花瓶放入1朵花，最多放k个空花瓶，如果不够，则剩下的花就舍弃，并输出放入k朵花的第一个空花瓶和最后一个空花瓶的位置。另一种操作是统计x到y中一共有多少个放入花的花瓶，并把这些花瓶中的花给清空。
线段树 线段树需要才用lazy思想，对于插入一段花，和清空一段花。还有需要统计一段线段有多少朵花，这样就可查询到从x开始的第一个空花瓶的位置。

E. Play with Sequence

F. Game
给定N（1<=N<=50000）点的树，和最多经过C（0<=C<=3）个陷阱，求从一个点出发，不能经过已经走过的边，终点为恰好经过C个陷阱，或者到达叶子节点。每个节点都有一定的权值，求合法路径中权值的最大值。
树形DP 对于每个点i，求其子孙节点，到该节点经过的陷阱数l，且子孙节点是否有陷阱r，的最大权值d[r][i][l]。对于i之前求得的到i的路径，再对当前遍历的i的孩子节点j，通过枚举分别到i和到j的经过的陷阱数，便可得到一条经过i的路径，用它来更新答案的最大权值，注意如果到达i的路径和到达j的路径的起始子孙节点如果都没陷阱的话，那就路径上的陷阱数就不能为C，否则无法遍历完此路径。

G. Weapon
3维几何-异面直线的距离

H. Palindrome Sub-Array
给定一个N*M（1<=N，M<=300）的矩阵，求一个最大的子正方形，使得该子正方形每行每列都为回文串。输出该子正方形的边长。
二分答案 对子矩阵的大小进行奇偶二分答案，二分答案后判断是否存在大小为Z的子矩阵，先枚举子矩阵所在的列，在依次从上到下检查是否连续Z行都为回文串，如果存在连续都为Z行的回文串，那么就检测这Z列是否为回文串。最后返回奇偶二分答案中最大值。

I. Warm up 2
在一个N*M的矩阵中(N,M=101)有n个水平方向和m个竖直方向的1*2的骨牌，且水平方向的骨牌不互相覆盖，竖直方向的骨牌不互相覆盖，求最多有多少块骨牌，他们都不互相覆盖。
二分图最大匹配 对于(i+j)%2==0的仅会和(i+j)%2==1的空格匹配，而且仅会匹配一个空格。

J. Fruit Ninja Extreme

