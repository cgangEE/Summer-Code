A. Brackets
给定一个只有圆括号和方括号的字符串，求一个最长的子串是一个正常完全匹配的括号的序列。
模拟 

B. Dividing a Chocolate
给一个n*m的巧克力矩阵，一开始切一刀，如果得到的是一大一小的矩阵，就在大矩阵上切掉一个和小矩阵一样的矩阵然后吃掉，于是又得到两个矩阵，重复这个步骤，切巧克力的人不能在同一块巧克力上吃，而是在两块巧克力上交替吃，直到得到两个相同的矩阵，然后两个人分享，求如何切第一道，使切巧克力的人吃到最多的巧克力。
fibonacci 

C. Thermal Death of the Universe
线段树

D. Equations System

E. Fool's Game

F. Lottery
给你n（1<=n<=60）个格子，和一个长为m（m<=n）的只含有大些字母的串s，要求这个n格子放入s中包含的大些字母，且从这个n个格子随机抽出m个字母，能出现可以组成串s的情况。如果按一定的方案，求从n个格子抽出m格子字母，能组成串s的最大的概率和最小的概率。
组合数+DP+大数 对于每一个字母i，在串s中出现的次数为a[i]，令其在n个格子中出现的概率为a[i]+x[i]，那么总的概率就为( C(a[i]+x[i], a[i]) | 1<=i<=26  / C(n, m) )，其中 sum( x[i] ) = n-m。根据这个方程便可进行动态规划的状态转移，分别把着n-m多出来的格子分配给这些字母。 C(a[i]+x[i], a[i]) = (x[i]+1)* * * (x[i]+a[i]) / (a[i]!) ，所以要求概率最大，即让 (x[i]+1) * * * (x[i]+a[i]) 的 概率最大。

G. Two Pipelines
DP-背包+点到直线的距离

H. Regular Words
给定n（1<=n<=60），求合法的长度为3n的regular words的个数。一个合法的长度为3n的regular words需要满足该串只含A、B、C这3个字符，且这3个字符出现次数都为n，且regular words的任意前缀，A出现的次数>=B出现的次数>=C出现的次数。
DP F[i][j][k]代表A出现了i次，B出现了j次，C出现了K次，且i>=j>=k，最后f[n][n][n]就是长度为3n的regular words的个数。
